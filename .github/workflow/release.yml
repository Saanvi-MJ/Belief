name: Android Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-platform: "29"

      - name: Build APK
        run: cd client/android && ./gradlew assembleRelease

      - name: Archive APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: client/android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v2
        with:
          name: app-release
          path: ${{ github.workspace }}/app-release

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install -g github-release-cli

      - name: Release APK
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          github-release release \
            --owner ${{ github.repository_owner }} \
            --repo ${{ github.event.repository.name }} \
            --tag ${{ steps.extract_version.outputs.version }} \
            --name "Release ${{ steps.extract_version.outputs.version }}" \
            --notes "Release of version ${{ steps.extract_version.outputs.version }}" \
            --commit ${{ github.sha }}

      - name: Extract version from package.json
        id: extract_version
        run: echo ::set-output name=version::$(jq -r .version package.json)
